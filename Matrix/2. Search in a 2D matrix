Easy:
int matSearch (int N, int M, int a[][M], int x)
{
    int i=0,j=M-1;
    while(i<N && j>=0){
        if(a[i][j]==x)
            return 1;
        else{
            if(a[i][j]>x)
                j--;
            else
                i++;
        }
    }
    return 0;
}

Optimized:
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(!matrix.size())
            return 0;
        int m=matrix[0].size();
        int n=matrix.size();
        int low=0,high=m*n-1;
        while(low<=high){
            int mid = (low + (high-low))/2;
            if(matrix[mid/m][mid%m]==target)
                return 1;
            if(matrix[mid/m][mid%m]>target)
                high=m-1;
            if(matrix[mid/m][mid%m]<target)
                low=m+1;
        }
        return 0;
    }
};
