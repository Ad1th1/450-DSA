1. Keep printing those nodes that have an indegree of 0 and then delete them
2. If topological sort is a success, size of answer will be equal to the number of vertices
3. Time and space complexity O(V)
4. Topological Sorting is mainly used for scheduling jobs from the given dependencies among jobs. 

class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    
	    vector<int> in(V,0);
	    vector<int> ans;
	    queue<int> q;
	    for(int i=0;i<V;i++){
	        for(auto x:adj[i])    
	            in[x]++;
	    }
	    for(int i=0;i<V;i++){
	        if(in[i]==0)
	            q.push(i);
	    }
	    while(!q.empty()){
	        int td=q.front();
	        q.pop();
	        ans.push_back(td);
	        for(auto x:adj[td]){
	            in[x]--;
	            if(in[x]==0)
	            q.push(x);
	        }
	    }
	    return ans;
	}
};
