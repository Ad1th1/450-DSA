#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
  
  bool solve(int src,vector<int> &vis,vector<int>&ord,vector<int>adj[]){
      vis[src]=1;
      ord[src]=1;
      for(auto x:adj[src]){
          if(!vis[x]){
              bool conf = solve(x,vis,ord,adj);
              if(conf == true)
              return true;
          }
          else if(ord[x])return true;
          
      }
      ord[src]=0;
      return false;
  }
  
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int> vis(V,0);
        vector<int> ord(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                bool c = solve(i,vis,ord,adj);
                if(c==true)
                return true;
            }
        }
        return false;
    }
};


int main() {

    
        int V=3, E=3;
       
        vector<int> adj[V];
        adj[0].push_back(1);
        adj[1].push_back(2);
 
        
        Solution obj;
        cout << obj.isCyclic(V, adj) << "\n";
    

    return 0;
}
