#include<bits/stdc++.h>
using namespace std;

class Solution{
    public:
    int dp[1001][1001];
    int solve(int W,int wt[],int val[],int n){
        if(W==0 || n==0)
        return 0;

        if(dp[n][W]!=-1)
        return dp[n][W];

        if(wt[n-1]>W)
        return solve(W,wt,val,n-1);

        return dp[n][W] = max(val[n-1]+solve(W-wt[n-1],wt,val,n-1),solve(W,wt,val,n-1));
    }
    int knapsack(int W,int wt[],int val[],int n){
        memset(dp,-1,sizeof(dp));
        return solve(W,wt,val,n);
    }
};

int main(){
    int n,w;
    cin>>n>>w;
    int val[n],wt[n];
    for(int i=0;i<n;i++)
        cin>>val[i];
    for(int i=0;i<n;i++)
    cin>>wt[i];

    Solution ob;
    cout<<ob.knapsack(w,wt,val,n);
}
